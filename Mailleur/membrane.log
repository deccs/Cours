-- FreeFem++ v  3.260002 (date Fri Dec 27 05:39:06 UTC 2013)
 Load: lg_fem lg_mesh lg_mesh3 eigenvalue 
    1 : 
    2 : real theta=4.*pi/3.;real a=2.,b=1.; func Z=0.;
    3 : border Gamma1(t=0,theta)    { x = a * cos(t); y = b*sin(t); label=1; }
    4 : border Gamma2(t=theta,2*pi) { x = a * cos(t); y = b*sin(t); label=2; }
    5 : // maillage
    6 : mesh Th=buildmesh(Gamma1(40)+Gamma2(20));
    7 : savemesh(Th,"membrane.msh");
    8 : // solveur
    9 : fespace Vh(Th,P1);
   10 : Vh phi,w, f=1;
   11 : solve Laplace(phi,w)=int2d(Th)(dx(phi)*dx(w) + dy(phi)*dy(w)) - int2d(Th)(f*w) + on(Gamma2,phi=0) + on(Gamma1,phi=Z);
   12 : // ecriture resultat
   13 : { ofstream ff("membrane.res"); 
   14 :   ff<<phi[].n<<endl; 
   15 :   for(int i=0; i<phi[].n;i++) ff<<phi[][i]<<endl; 
   16 : }
   17 :  sizestack + 1024 =2160  ( 1136 )

00
  --  mesh:  Nb of Triangles =    408, Nb of Vertices 235
  number of required edges : 0
  -- Solve : 
          min 3.64522e-32  max 0.40103
times: compile 0.003435s, execution 0.008164s,  mpirank:0
 CodeAlloc : nb ptr  2543,  size :327984 mpirank: 0
Bien: On a fini Normalement
